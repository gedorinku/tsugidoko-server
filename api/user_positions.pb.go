// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_positions.proto

package api_pb // import "github.com/gedorinku/tsugidoko-server/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserPosition struct {
	ClassRoom            *ClassRoom `protobuf:"bytes,1,opt,name=class_room,json=classRoom,proto3" json:"class_room,omitempty"`
	IsValid              bool       `protobuf:"varint,2,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserPosition) Reset()         { *m = UserPosition{} }
func (m *UserPosition) String() string { return proto.CompactTextString(m) }
func (*UserPosition) ProtoMessage()    {}
func (*UserPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_positions_627639dc063838fb, []int{0}
}
func (m *UserPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPosition.Unmarshal(m, b)
}
func (m *UserPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPosition.Marshal(b, m, deterministic)
}
func (dst *UserPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPosition.Merge(dst, src)
}
func (m *UserPosition) XXX_Size() int {
	return xxx_messageInfo_UserPosition.Size(m)
}
func (m *UserPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPosition.DiscardUnknown(m)
}

var xxx_messageInfo_UserPosition proto.InternalMessageInfo

func (m *UserPosition) GetClassRoom() *ClassRoom {
	if m != nil {
		return m.ClassRoom
	}
	return nil
}

func (m *UserPosition) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

type GetUserPositionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserPositionRequest) Reset()         { *m = GetUserPositionRequest{} }
func (m *GetUserPositionRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserPositionRequest) ProtoMessage()    {}
func (*GetUserPositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_positions_627639dc063838fb, []int{1}
}
func (m *GetUserPositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserPositionRequest.Unmarshal(m, b)
}
func (m *GetUserPositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserPositionRequest.Marshal(b, m, deterministic)
}
func (dst *GetUserPositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserPositionRequest.Merge(dst, src)
}
func (m *GetUserPositionRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserPositionRequest.Size(m)
}
func (m *GetUserPositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserPositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserPositionRequest proto.InternalMessageInfo

type UpdateUserPositionRequest struct {
	Bssid string `protobuf:"bytes,1,opt,name=bssid,proto3" json:"bssid,omitempty"`
	// beaconに接続している時にtrueにする
	IsValid              bool     `protobuf:"varint,2,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserPositionRequest) Reset()         { *m = UpdateUserPositionRequest{} }
func (m *UpdateUserPositionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserPositionRequest) ProtoMessage()    {}
func (*UpdateUserPositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_positions_627639dc063838fb, []int{2}
}
func (m *UpdateUserPositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserPositionRequest.Unmarshal(m, b)
}
func (m *UpdateUserPositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserPositionRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateUserPositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserPositionRequest.Merge(dst, src)
}
func (m *UpdateUserPositionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserPositionRequest.Size(m)
}
func (m *UpdateUserPositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserPositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserPositionRequest proto.InternalMessageInfo

func (m *UpdateUserPositionRequest) GetBssid() string {
	if m != nil {
		return m.Bssid
	}
	return ""
}

func (m *UpdateUserPositionRequest) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func init() {
	proto.RegisterType((*UserPosition)(nil), "gedorinku.tsugidoko_server.UserPosition")
	proto.RegisterType((*GetUserPositionRequest)(nil), "gedorinku.tsugidoko_server.GetUserPositionRequest")
	proto.RegisterType((*UpdateUserPositionRequest)(nil), "gedorinku.tsugidoko_server.UpdateUserPositionRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserPositionServiceClient is the client API for UserPositionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserPositionServiceClient interface {
	GetUserPosition(ctx context.Context, in *GetUserPositionRequest, opts ...grpc.CallOption) (*UserPosition, error)
	UpdateUserPosition(ctx context.Context, in *UpdateUserPositionRequest, opts ...grpc.CallOption) (*UserPosition, error)
}

type userPositionServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserPositionServiceClient(cc *grpc.ClientConn) UserPositionServiceClient {
	return &userPositionServiceClient{cc}
}

func (c *userPositionServiceClient) GetUserPosition(ctx context.Context, in *GetUserPositionRequest, opts ...grpc.CallOption) (*UserPosition, error) {
	out := new(UserPosition)
	err := c.cc.Invoke(ctx, "/gedorinku.tsugidoko_server.UserPositionService/GetUserPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userPositionServiceClient) UpdateUserPosition(ctx context.Context, in *UpdateUserPositionRequest, opts ...grpc.CallOption) (*UserPosition, error) {
	out := new(UserPosition)
	err := c.cc.Invoke(ctx, "/gedorinku.tsugidoko_server.UserPositionService/UpdateUserPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserPositionServiceServer is the server API for UserPositionService service.
type UserPositionServiceServer interface {
	GetUserPosition(context.Context, *GetUserPositionRequest) (*UserPosition, error)
	UpdateUserPosition(context.Context, *UpdateUserPositionRequest) (*UserPosition, error)
}

func RegisterUserPositionServiceServer(s *grpc.Server, srv UserPositionServiceServer) {
	s.RegisterService(&_UserPositionService_serviceDesc, srv)
}

func _UserPositionService_GetUserPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserPositionServiceServer).GetUserPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gedorinku.tsugidoko_server.UserPositionService/GetUserPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserPositionServiceServer).GetUserPosition(ctx, req.(*GetUserPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserPositionService_UpdateUserPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserPositionServiceServer).UpdateUserPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gedorinku.tsugidoko_server.UserPositionService/UpdateUserPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserPositionServiceServer).UpdateUserPosition(ctx, req.(*UpdateUserPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserPositionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gedorinku.tsugidoko_server.UserPositionService",
	HandlerType: (*UserPositionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserPosition",
			Handler:    _UserPositionService_GetUserPosition_Handler,
		},
		{
			MethodName: "UpdateUserPosition",
			Handler:    _UserPositionService_UpdateUserPosition_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_positions.proto",
}

func init() {
	proto.RegisterFile("user_positions.proto", fileDescriptor_user_positions_627639dc063838fb)
}

var fileDescriptor_user_positions_627639dc063838fb = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcf, 0x4a, 0xfb, 0x40,
	0x10, 0xc7, 0x49, 0xe1, 0xf7, 0xb3, 0x5d, 0xc5, 0x3f, 0xdb, 0x52, 0xda, 0xe8, 0xa1, 0x04, 0x84,
	0x22, 0x98, 0x95, 0x88, 0x17, 0xbd, 0xa9, 0xe0, 0xc5, 0x83, 0x44, 0xea, 0xc1, 0x4b, 0xd8, 0x24,
	0x6b, 0x5c, 0xda, 0x64, 0xd6, 0xdd, 0x4d, 0xc0, 0xab, 0x17, 0xaf, 0x82, 0x6f, 0xe2, 0xab, 0xf8,
	0x0a, 0x3e, 0x88, 0x24, 0x4d, 0x6b, 0xa8, 0x6d, 0xc0, 0xdb, 0x0e, 0x33, 0xdf, 0xef, 0x7c, 0x66,
	0x67, 0x50, 0x27, 0x55, 0x4c, 0x7a, 0x02, 0x14, 0xd7, 0x1c, 0x12, 0x65, 0x0b, 0x09, 0x1a, 0xb0,
	0x19, 0xb1, 0x10, 0x24, 0x4f, 0xc6, 0xa9, 0xad, 0x55, 0x1a, 0xf1, 0x10, 0xc6, 0xe0, 0x29, 0x26,
	0x33, 0x26, 0xcd, 0xbd, 0x08, 0x20, 0x9a, 0x30, 0x42, 0x05, 0x27, 0x34, 0x49, 0x40, 0xd3, 0x8a,
	0xd2, 0xdc, 0x2d, 0xb3, 0x45, 0xe4, 0xa7, 0x0f, 0x84, 0xc5, 0x42, 0x3f, 0x97, 0xc9, 0x9d, 0x60,
	0x42, 0x95, 0xf2, 0x24, 0x40, 0x5c, 0xd6, 0x5b, 0x80, 0x36, 0x46, 0x8a, 0xc9, 0x9b, 0x12, 0x00,
	0x5f, 0x22, 0xf4, 0x53, 0xd4, 0x33, 0x06, 0xc6, 0x70, 0xdd, 0xd9, 0xb7, 0x57, 0xe3, 0xd8, 0x17,
	0x79, 0xb5, 0x0b, 0x10, 0xbb, 0xad, 0x60, 0xf6, 0xc4, 0x7d, 0xd4, 0xe4, 0xca, 0xcb, 0xe8, 0x84,
	0x87, 0xbd, 0xc6, 0xc0, 0x18, 0x36, 0xdd, 0x35, 0xae, 0xee, 0xf2, 0xd0, 0xea, 0xa1, 0xee, 0x15,
	0xd3, 0xd5, 0x9e, 0x2e, 0x7b, 0x4a, 0x99, 0xd2, 0xd6, 0x35, 0xea, 0x8f, 0x44, 0x48, 0x35, 0x5b,
	0x92, 0xc4, 0x1d, 0xf4, 0xcf, 0x57, 0x8a, 0x87, 0x05, 0x52, 0xcb, 0x9d, 0x06, 0x35, 0x7d, 0x9c,
	0x8f, 0x06, 0x6a, 0x57, 0x8d, 0x6e, 0x99, 0xcc, 0x78, 0xc0, 0xf0, 0xab, 0x81, 0xb6, 0x16, 0x00,
	0xb0, 0x53, 0x37, 0xe0, 0x72, 0x5a, 0x73, 0x58, 0xa7, 0xa9, 0x0a, 0xac, 0xee, 0xcb, 0xe7, 0xd7,
	0x7b, 0x63, 0x1b, 0x6f, 0x92, 0x7c, 0xd7, 0x64, 0xb6, 0x6b, 0xfc, 0x66, 0x20, 0xfc, 0x7b, 0x60,
	0x7c, 0x52, 0x6b, 0xbc, 0xea, 0x83, 0xfe, 0xc0, 0xd3, 0x2f, 0x78, 0xda, 0xe6, 0x02, 0xcf, 0xa9,
	0x71, 0x70, 0xee, 0xdc, 0x1f, 0x45, 0x5c, 0x3f, 0xa6, 0xbe, 0x1d, 0x40, 0x4c, 0xe6, 0x86, 0x64,
	0x6e, 0x78, 0x38, 0x35, 0xcc, 0x8f, 0xef, 0x8c, 0x0a, 0xee, 0x09, 0xdf, 0xff, 0x5f, 0x1c, 0xd2,
	0xf1, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x00, 0x7b, 0xf0, 0xca, 0x02, 0x00, 0x00,
}
