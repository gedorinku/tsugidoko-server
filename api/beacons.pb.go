// Code generated by protoc-gen-go. DO NOT EDIT.
// source: beacons.proto

package api_pb // import "github.com/gedorinku/tsugidoko-server/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Beacon struct {
	Bssid                string     `protobuf:"bytes,1,opt,name=bssid,proto3" json:"bssid,omitempty"`
	ClassRoom            *ClassRoom `protobuf:"bytes,2,opt,name=class_room,json=classRoom,proto3" json:"class_room,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Beacon) Reset()         { *m = Beacon{} }
func (m *Beacon) String() string { return proto.CompactTextString(m) }
func (*Beacon) ProtoMessage()    {}
func (*Beacon) Descriptor() ([]byte, []int) {
	return fileDescriptor_beacons_c345373a4fc6936b, []int{0}
}
func (m *Beacon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Beacon.Unmarshal(m, b)
}
func (m *Beacon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Beacon.Marshal(b, m, deterministic)
}
func (dst *Beacon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Beacon.Merge(dst, src)
}
func (m *Beacon) XXX_Size() int {
	return xxx_messageInfo_Beacon.Size(m)
}
func (m *Beacon) XXX_DiscardUnknown() {
	xxx_messageInfo_Beacon.DiscardUnknown(m)
}

var xxx_messageInfo_Beacon proto.InternalMessageInfo

func (m *Beacon) GetBssid() string {
	if m != nil {
		return m.Bssid
	}
	return ""
}

func (m *Beacon) GetClassRoom() *ClassRoom {
	if m != nil {
		return m.ClassRoom
	}
	return nil
}

type ListBeaconsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBeaconsRequest) Reset()         { *m = ListBeaconsRequest{} }
func (m *ListBeaconsRequest) String() string { return proto.CompactTextString(m) }
func (*ListBeaconsRequest) ProtoMessage()    {}
func (*ListBeaconsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beacons_c345373a4fc6936b, []int{1}
}
func (m *ListBeaconsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBeaconsRequest.Unmarshal(m, b)
}
func (m *ListBeaconsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBeaconsRequest.Marshal(b, m, deterministic)
}
func (dst *ListBeaconsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBeaconsRequest.Merge(dst, src)
}
func (m *ListBeaconsRequest) XXX_Size() int {
	return xxx_messageInfo_ListBeaconsRequest.Size(m)
}
func (m *ListBeaconsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBeaconsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBeaconsRequest proto.InternalMessageInfo

type ListBeaconsResponse struct {
	Beacons              []*Beacon `protobuf:"bytes,1,rep,name=beacons,proto3" json:"beacons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListBeaconsResponse) Reset()         { *m = ListBeaconsResponse{} }
func (m *ListBeaconsResponse) String() string { return proto.CompactTextString(m) }
func (*ListBeaconsResponse) ProtoMessage()    {}
func (*ListBeaconsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beacons_c345373a4fc6936b, []int{2}
}
func (m *ListBeaconsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBeaconsResponse.Unmarshal(m, b)
}
func (m *ListBeaconsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBeaconsResponse.Marshal(b, m, deterministic)
}
func (dst *ListBeaconsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBeaconsResponse.Merge(dst, src)
}
func (m *ListBeaconsResponse) XXX_Size() int {
	return xxx_messageInfo_ListBeaconsResponse.Size(m)
}
func (m *ListBeaconsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBeaconsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBeaconsResponse proto.InternalMessageInfo

func (m *ListBeaconsResponse) GetBeacons() []*Beacon {
	if m != nil {
		return m.Beacons
	}
	return nil
}

type GetBeaconRequest struct {
	Bssid                string   `protobuf:"bytes,1,opt,name=bssid,proto3" json:"bssid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBeaconRequest) Reset()         { *m = GetBeaconRequest{} }
func (m *GetBeaconRequest) String() string { return proto.CompactTextString(m) }
func (*GetBeaconRequest) ProtoMessage()    {}
func (*GetBeaconRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beacons_c345373a4fc6936b, []int{3}
}
func (m *GetBeaconRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBeaconRequest.Unmarshal(m, b)
}
func (m *GetBeaconRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBeaconRequest.Marshal(b, m, deterministic)
}
func (dst *GetBeaconRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBeaconRequest.Merge(dst, src)
}
func (m *GetBeaconRequest) XXX_Size() int {
	return xxx_messageInfo_GetBeaconRequest.Size(m)
}
func (m *GetBeaconRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBeaconRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBeaconRequest proto.InternalMessageInfo

func (m *GetBeaconRequest) GetBssid() string {
	if m != nil {
		return m.Bssid
	}
	return ""
}

type CreateBeaconRequest struct {
	Beacon               *Beacon  `protobuf:"bytes,1,opt,name=beacon,proto3" json:"beacon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBeaconRequest) Reset()         { *m = CreateBeaconRequest{} }
func (m *CreateBeaconRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBeaconRequest) ProtoMessage()    {}
func (*CreateBeaconRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beacons_c345373a4fc6936b, []int{4}
}
func (m *CreateBeaconRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBeaconRequest.Unmarshal(m, b)
}
func (m *CreateBeaconRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBeaconRequest.Marshal(b, m, deterministic)
}
func (dst *CreateBeaconRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBeaconRequest.Merge(dst, src)
}
func (m *CreateBeaconRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBeaconRequest.Size(m)
}
func (m *CreateBeaconRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBeaconRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBeaconRequest proto.InternalMessageInfo

func (m *CreateBeaconRequest) GetBeacon() *Beacon {
	if m != nil {
		return m.Beacon
	}
	return nil
}

type UpdateBeaconRequest struct {
	Beacon               *Beacon  `protobuf:"bytes,1,opt,name=beacon,proto3" json:"beacon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBeaconRequest) Reset()         { *m = UpdateBeaconRequest{} }
func (m *UpdateBeaconRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBeaconRequest) ProtoMessage()    {}
func (*UpdateBeaconRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beacons_c345373a4fc6936b, []int{5}
}
func (m *UpdateBeaconRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBeaconRequest.Unmarshal(m, b)
}
func (m *UpdateBeaconRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBeaconRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateBeaconRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBeaconRequest.Merge(dst, src)
}
func (m *UpdateBeaconRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBeaconRequest.Size(m)
}
func (m *UpdateBeaconRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBeaconRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBeaconRequest proto.InternalMessageInfo

func (m *UpdateBeaconRequest) GetBeacon() *Beacon {
	if m != nil {
		return m.Beacon
	}
	return nil
}

type DeleteBeaconRequest struct {
	Bssid                string   `protobuf:"bytes,1,opt,name=bssid,proto3" json:"bssid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBeaconRequest) Reset()         { *m = DeleteBeaconRequest{} }
func (m *DeleteBeaconRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBeaconRequest) ProtoMessage()    {}
func (*DeleteBeaconRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beacons_c345373a4fc6936b, []int{6}
}
func (m *DeleteBeaconRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBeaconRequest.Unmarshal(m, b)
}
func (m *DeleteBeaconRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBeaconRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteBeaconRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBeaconRequest.Merge(dst, src)
}
func (m *DeleteBeaconRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBeaconRequest.Size(m)
}
func (m *DeleteBeaconRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBeaconRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBeaconRequest proto.InternalMessageInfo

func (m *DeleteBeaconRequest) GetBssid() string {
	if m != nil {
		return m.Bssid
	}
	return ""
}

func init() {
	proto.RegisterType((*Beacon)(nil), "gedorinku.tsugidoko_server.Beacon")
	proto.RegisterType((*ListBeaconsRequest)(nil), "gedorinku.tsugidoko_server.ListBeaconsRequest")
	proto.RegisterType((*ListBeaconsResponse)(nil), "gedorinku.tsugidoko_server.ListBeaconsResponse")
	proto.RegisterType((*GetBeaconRequest)(nil), "gedorinku.tsugidoko_server.GetBeaconRequest")
	proto.RegisterType((*CreateBeaconRequest)(nil), "gedorinku.tsugidoko_server.CreateBeaconRequest")
	proto.RegisterType((*UpdateBeaconRequest)(nil), "gedorinku.tsugidoko_server.UpdateBeaconRequest")
	proto.RegisterType((*DeleteBeaconRequest)(nil), "gedorinku.tsugidoko_server.DeleteBeaconRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BeaconServiceClient is the client API for BeaconService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BeaconServiceClient interface {
	ListBeacons(ctx context.Context, in *ListBeaconsRequest, opts ...grpc.CallOption) (*ListBeaconsResponse, error)
	GetBeacon(ctx context.Context, in *GetBeaconRequest, opts ...grpc.CallOption) (*Beacon, error)
	CreateBeacon(ctx context.Context, in *CreateBeaconRequest, opts ...grpc.CallOption) (*Beacon, error)
	UpdateBeacon(ctx context.Context, in *UpdateBeaconRequest, opts ...grpc.CallOption) (*Beacon, error)
	DeleteBeacon(ctx context.Context, in *DeleteBeaconRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type beaconServiceClient struct {
	cc *grpc.ClientConn
}

func NewBeaconServiceClient(cc *grpc.ClientConn) BeaconServiceClient {
	return &beaconServiceClient{cc}
}

func (c *beaconServiceClient) ListBeacons(ctx context.Context, in *ListBeaconsRequest, opts ...grpc.CallOption) (*ListBeaconsResponse, error) {
	out := new(ListBeaconsResponse)
	err := c.cc.Invoke(ctx, "/gedorinku.tsugidoko_server.BeaconService/ListBeacons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconServiceClient) GetBeacon(ctx context.Context, in *GetBeaconRequest, opts ...grpc.CallOption) (*Beacon, error) {
	out := new(Beacon)
	err := c.cc.Invoke(ctx, "/gedorinku.tsugidoko_server.BeaconService/GetBeacon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconServiceClient) CreateBeacon(ctx context.Context, in *CreateBeaconRequest, opts ...grpc.CallOption) (*Beacon, error) {
	out := new(Beacon)
	err := c.cc.Invoke(ctx, "/gedorinku.tsugidoko_server.BeaconService/CreateBeacon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconServiceClient) UpdateBeacon(ctx context.Context, in *UpdateBeaconRequest, opts ...grpc.CallOption) (*Beacon, error) {
	out := new(Beacon)
	err := c.cc.Invoke(ctx, "/gedorinku.tsugidoko_server.BeaconService/UpdateBeacon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconServiceClient) DeleteBeacon(ctx context.Context, in *DeleteBeaconRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gedorinku.tsugidoko_server.BeaconService/DeleteBeacon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BeaconServiceServer is the server API for BeaconService service.
type BeaconServiceServer interface {
	ListBeacons(context.Context, *ListBeaconsRequest) (*ListBeaconsResponse, error)
	GetBeacon(context.Context, *GetBeaconRequest) (*Beacon, error)
	CreateBeacon(context.Context, *CreateBeaconRequest) (*Beacon, error)
	UpdateBeacon(context.Context, *UpdateBeaconRequest) (*Beacon, error)
	DeleteBeacon(context.Context, *DeleteBeaconRequest) (*empty.Empty, error)
}

func RegisterBeaconServiceServer(s *grpc.Server, srv BeaconServiceServer) {
	s.RegisterService(&_BeaconService_serviceDesc, srv)
}

func _BeaconService_ListBeacons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBeaconsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconServiceServer).ListBeacons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gedorinku.tsugidoko_server.BeaconService/ListBeacons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconServiceServer).ListBeacons(ctx, req.(*ListBeaconsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconService_GetBeacon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBeaconRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconServiceServer).GetBeacon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gedorinku.tsugidoko_server.BeaconService/GetBeacon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconServiceServer).GetBeacon(ctx, req.(*GetBeaconRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconService_CreateBeacon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBeaconRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconServiceServer).CreateBeacon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gedorinku.tsugidoko_server.BeaconService/CreateBeacon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconServiceServer).CreateBeacon(ctx, req.(*CreateBeaconRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconService_UpdateBeacon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBeaconRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconServiceServer).UpdateBeacon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gedorinku.tsugidoko_server.BeaconService/UpdateBeacon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconServiceServer).UpdateBeacon(ctx, req.(*UpdateBeaconRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconService_DeleteBeacon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBeaconRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconServiceServer).DeleteBeacon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gedorinku.tsugidoko_server.BeaconService/DeleteBeacon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconServiceServer).DeleteBeacon(ctx, req.(*DeleteBeaconRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BeaconService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gedorinku.tsugidoko_server.BeaconService",
	HandlerType: (*BeaconServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListBeacons",
			Handler:    _BeaconService_ListBeacons_Handler,
		},
		{
			MethodName: "GetBeacon",
			Handler:    _BeaconService_GetBeacon_Handler,
		},
		{
			MethodName: "CreateBeacon",
			Handler:    _BeaconService_CreateBeacon_Handler,
		},
		{
			MethodName: "UpdateBeacon",
			Handler:    _BeaconService_UpdateBeacon_Handler,
		},
		{
			MethodName: "DeleteBeacon",
			Handler:    _BeaconService_DeleteBeacon_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "beacons.proto",
}

func init() { proto.RegisterFile("beacons.proto", fileDescriptor_beacons_c345373a4fc6936b) }

var fileDescriptor_beacons_c345373a4fc6936b = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xe5, 0xa2, 0x06, 0x32, 0x49, 0xa5, 0xb0, 0xa9, 0x20, 0x32, 0x1c, 0xc2, 0x4a, 0x88,
	0x88, 0x8f, 0x35, 0x32, 0xb7, 0xc2, 0xa9, 0x2d, 0xe2, 0xc2, 0x05, 0x57, 0x5c, 0xb8, 0x44, 0xfe,
	0x18, 0xcc, 0xaa, 0x89, 0xd7, 0xf5, 0xae, 0x8b, 0x10, 0xaa, 0x84, 0x38, 0xf7, 0xc6, 0xa3, 0xf1,
	0x0a, 0x3c, 0x08, 0xca, 0xee, 0xda, 0xb8, 0x8d, 0xb1, 0x8c, 0xc4, 0xcd, 0xeb, 0x9d, 0xf9, 0xff,
	0x76, 0xe6, 0x3f, 0x1a, 0xd8, 0x8b, 0x30, 0x8c, 0x45, 0x26, 0x59, 0x5e, 0x08, 0x25, 0x88, 0x9b,
	0x62, 0x22, 0x0a, 0x9e, 0x9d, 0x96, 0x4c, 0xc9, 0x32, 0xe5, 0x89, 0x38, 0x15, 0x4b, 0x89, 0xc5,
	0x39, 0x16, 0xee, 0xfd, 0x54, 0x88, 0x74, 0x85, 0x5e, 0x98, 0x73, 0x2f, 0xcc, 0x32, 0xa1, 0x42,
	0xc5, 0xeb, 0x4c, 0xf7, 0x9e, 0xbd, 0xd5, 0xa7, 0xa8, 0xfc, 0xe8, 0xe1, 0x3a, 0x57, 0x5f, 0xec,
	0xe5, 0xed, 0x78, 0x15, 0x4a, 0xb9, 0x2c, 0x84, 0x58, 0xdb, 0x78, 0x9a, 0xc0, 0xe0, 0x50, 0xa3,
	0xc9, 0x3e, 0xec, 0x46, 0x52, 0xf2, 0x64, 0xe6, 0xcc, 0x9d, 0xc5, 0x30, 0x30, 0x07, 0x72, 0x0c,
	0xf0, 0x27, 0x69, 0xb6, 0x33, 0x77, 0x16, 0x23, 0xff, 0x21, 0xfb, 0xfb, 0xf3, 0xd8, 0xd1, 0x26,
	0x3a, 0x10, 0x62, 0x1d, 0x0c, 0xe3, 0xea, 0x93, 0xee, 0x03, 0x79, 0xcb, 0xa5, 0x32, 0x24, 0x19,
	0xe0, 0x59, 0x89, 0x52, 0xd1, 0x13, 0x98, 0x5e, 0xf9, 0x2b, 0x73, 0x91, 0x49, 0x24, 0xaf, 0xe0,
	0xa6, 0xed, 0xc6, 0xcc, 0x99, 0xdf, 0x58, 0x8c, 0x7c, 0xda, 0xc5, 0x33, 0xd9, 0x41, 0x95, 0x42,
	0x17, 0x30, 0x79, 0x83, 0x56, 0xd3, 0x82, 0xda, 0x4b, 0xa3, 0xef, 0x60, 0x7a, 0x54, 0x60, 0xa8,
	0xf0, 0x6a, 0xf0, 0x01, 0x0c, 0x8c, 0x96, 0x8e, 0xee, 0x47, 0xb7, 0x19, 0x1b, 0xc9, 0xf7, 0x79,
	0xf2, 0x5f, 0x25, 0x9f, 0xc0, 0xf4, 0x18, 0x57, 0x78, 0x5d, 0xb2, 0xb5, 0x24, 0xff, 0x72, 0x17,
	0xf6, 0x4c, 0xdc, 0x09, 0x16, 0xe7, 0x3c, 0x46, 0xf2, 0xcd, 0x81, 0x51, 0xa3, 0xc9, 0x84, 0x75,
	0xa1, 0xb7, 0x3d, 0x72, 0xbd, 0xde, 0xf1, 0xc6, 0x3d, 0x3a, 0xf9, 0xfe, 0xf3, 0xd7, 0x8f, 0x1d,
	0x20, 0xb7, 0x3c, 0xeb, 0x08, 0xf9, 0x0c, 0xc3, 0xda, 0x11, 0xf2, 0xb4, 0x4b, 0xef, 0xba, 0x71,
	0x6e, 0x8f, 0x46, 0xd1, 0x99, 0x06, 0x12, 0x32, 0xa9, 0x80, 0xde, 0x57, 0xdd, 0x8c, 0x0b, 0x72,
	0x01, 0xe3, 0xa6, 0xc1, 0xa4, 0xb3, 0x96, 0x96, 0x51, 0xf8, 0x17, 0x3c, 0xad, 0xeb, 0x3d, 0xb0,
	0xce, 0x91, 0x4b, 0x07, 0xc6, 0xcd, 0x69, 0xe8, 0xe6, 0xb7, 0xcc, 0x4d, 0x2f, 0xfe, 0x23, 0xcd,
	0x7f, 0xe0, 0xdf, 0x6d, 0x94, 0xaf, 0x3f, 0x98, 0xe9, 0x42, 0xfd, 0x9c, 0x33, 0x18, 0x37, 0x07,
	0xa9, 0xfb, 0x35, 0x2d, 0x23, 0xe7, 0xde, 0x61, 0x66, 0xb7, 0xb0, 0x6a, 0xb7, 0xb0, 0xd7, 0x9b,
	0xdd, 0x52, 0x75, 0xe0, 0xf1, 0x96, 0x01, 0x87, 0xfe, 0x87, 0xe7, 0x29, 0x57, 0x9f, 0xca, 0x88,
	0xc5, 0x62, 0xed, 0xd5, 0x38, 0xaf, 0xc6, 0x3d, 0x33, 0xb8, 0xcd, 0x2e, 0x7b, 0x19, 0xe6, 0x7c,
	0x99, 0x47, 0xd1, 0x40, 0xab, 0xbf, 0xf8, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x74, 0x82, 0xcf,
	0x12, 0x05, 0x00, 0x00,
}
